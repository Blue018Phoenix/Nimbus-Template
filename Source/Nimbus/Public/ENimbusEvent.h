#pragma once
#include "CoreMinimal.h"
#include "ENimbusEvent.generated.h"

UENUM(BlueprintType)
enum class ENimbusEvent : uint8 {
    MISSION_ACCOMPLISHED,
    MISSION_UPDATE,
    MISSION_START,
    MISSION_PHASE_START,
    MISSION_FAILURE_TIME_OVER,
    MISSION_FAILURE_ZONE,
    MISSION_FAILURE_DEAD,
    MISSION_FAILURE_FAIL_OBJECTIVE,
    MISSION_CHECKPOINT_SAVED,
    MULTI_TEAM_WINNING,
    MULTI_ENEMY_WINNING,
    MULTI_YOU_WIN,
    MULTI_YOU_LOSE,
    MULTI_DRAW,
    MULTI_TIME_UP,
    MULTI_MISSION_ACCOMPLISHED,
    MULTI_ABORT,
    MULTI_ENEMY_DESTROYED,
    MULTI_ENEMY_DESTROYED_ASSIST,
    MULTI_ENEMY_HIT,
    MULTI_PLAYER_MISSILE_MISSED,
    PLAYER_OUT_OF_COMBAT_ZONE,
    PLAYER_APPROACHING_BASE,
    PLAYER_STALLED,
    PLAYER_BUFFETED,
    PLAYER_LOW_ALTITUDE,
    PLAYER_HIGH_ALTITUDE,
    PLAYER_AUTO_PILOT,
    MISSILE_ALERT_DANGER_NEAR,
    MISSILE_ALERT_DANGER_FAR,
    MISSILE_ALERT_WARNING,
    PLAYER_ENTER_CLOUD,
    PLAYER_EXIT_CLOUD,
    PLAYER_BEGIN_ICING,
    PLAYER_ICING,
    PLAYER_END_ICING,
    ICING_HUD_NOTIFICATION,
    PLAYER_TOOK_DAMAGE,
    PLAYER_CRASHED,
    PLAYER_TARGET_LOCKON,
    PLAYER_FLARE_ACTIVATED,
    PLAYER_FLARE_FIRED,
    PLAYER_ATTACKING_ALLY,
    AI_TARGET_LOCKON,
    WEAPON_GUN_EMPTY,
    WEAPON_MISSILE_EMPTY,
    WEAPON_SPECIAL_EMPTY,
    WEAPON_FLARE_EMPTY,
    WEAPON_SELECTED_MISSILE,
    WEAPON_SELECTED_SPECIAL,
    WEAPON_GUN_FIRED,
    WEAPON_EML_FIRED,
    WEAPON_AA_MISSILE_FIRED,
    WEAPON_AG_MISSILE_FIRED,
    WEAPON_BOMB_FIRED,
    WEAPON_ROCKET_FIRED,
    WEAPON_RAILGUN_FIRED,
    WEAPON_LASER_FIRED,
    WEAPON_LASER_RELEASED,
    WEAPON_SPECIAL_BECAME_EMPTY,
    WEAPON_TGTP_PHASE,
    WEAPON_MAD_PHASE,
    ENEMY_DESTROYED,
    ENEMY_HIT,
    PLAYER_MISSILE_MISSED,
    OBJECT_WEAPON_FIRED,
    OBJECT_FLARE_ACTIVATED,
    MINIGAME_CLEARED_FOR_TAKEOFF,
    MINIGAME_TAKEOFF_FAILED,
    MINIGAME_TAKEOFF_SUCCESSFUL,
    MINIGAME_REQUEST_LANDING,
    MINIGAME_LANDING_SUCCESSFUL,
    MINIGAME_LANDING_FAILED,
    MINIGAME_AERIAL_REFUELING_BEGIN,
    MINIGAME_AERIAL_REFUELING_COMMPLETED,
    MINIGAME_AERIAL_REFUELING_FAILED,
    MINIGAME_AERIAL_REFUELING_HOLD_POSITION,
    MINIGAME_FAILURE_TIME_OVER,
    NUM_OF_EVENTS,
};

